version: "3.7"

services:
  client-primary:
    container_name: client-primary
    image: ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_VERSION}
    ports:
      # Do not bind to any specific port in the host so that we can connect through the load balancer.
    - 8080
    depends_on:
      - shard1
      - shard2
    volumes:
      - ./volumes/client-primary.conf:/opt/docker/conf/application.conf
      - ${FILE}:/opt/file.txt
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  client-secondary:
    container_name: client-secondary
    image: ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_VERSION}
    ports:
      # Do not bind to any specific port in the host so that we can connect through the load balancer.
      - 8080
    depends_on:
      - client-primary
    volumes:
      - ./volumes/client-secondary.conf:/opt/docker/conf/application.conf
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  shard1:
    container_name: shard1
    image: ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_VERSION}
    ports:
    - 9080:8080
    volumes:
      - ./volumes/shard.conf:/opt/docker/conf/application.conf
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  shard2:
    container_name: shard2
    image: ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_VERSION}
    ports:
    - 9081:8080
    volumes:
      - ./volumes/shard.conf:/opt/docker/conf/application.conf
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  nginx:
    image: nginx:latest
    volumes:
      - ./volumes/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - client-primary
      - client-secondary
    ports:
      - "8080:8080"
